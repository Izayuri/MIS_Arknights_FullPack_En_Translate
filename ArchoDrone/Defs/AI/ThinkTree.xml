<?xml version="1.0" encoding="utf-8" ?>
<Defs>

	<ThinkTreeDef>
		<defName>FS_ThinkTree_ArchoDroneMain</defName>
		<thinkRoot Class="ThinkNode_Priority">
			<subNodes>

                <!-- Despawned -->
                <li Class="ThinkNode_Subtree">
                      <treeDef>Despawned</treeDef>
                </li>
		
				<li Class="ThinkNode_Subtree">
					<treeDef>Downed</treeDef>
				</li>

				<!-- React to close melee threat -->
				<li Class="JobGiver_ReactToCloseMeleeThreat" /> 

				<!-- 检测到敌人会进入战斗模式 -->
				<li Class="FS_ArchoDrone.ThinkNode_CombatMode">
					<subNodes>
						<li Class="FS_ArchoDrone.ThinkNode_CombatSupportMode">
							<subNodes>
								<!-- <li Class="JobGiver_MoveToStandable"/> -->
								<li Class="FS_ArchoDrone.JobGiver_SupportPledgerInCombat" />
								<li Class="FS_ArchoDrone.JobGiver_AIGotoPledger" />
								<li Class="JobGiver_AIFightEnemies">
									<targetAcquireRadius>50</targetAcquireRadius>
									<targetKeepRadius>200</targetKeepRadius>
								</li>
							</subNodes>
						</li>
						<li Class="ThinkNode_Priority">
							<subNodes>
								<li Class="JobGiver_MoveToStandable"/>
								<li Class="JobGiver_AIFightEnemies">
									<targetAcquireRadius>200</targetAcquireRadius>
									<targetKeepRadius>3</targetKeepRadius>
								</li>
								<li Class="JobGiver_AIGotoNearestHostile" />
							</subNodes>
						</li>
					</subNodes>
				</li>


				<!-- Do a queued job -->
				<li Class="ThinkNode_QueuedJob" />

				<!-- 生活辅助 -->
				<li Class="ThinkNode_Priority">
					<subNodes>
						<li Class="JobGiver_MoveToStandable"/>
						<li Class="FS_ArchoDrone.JobGiver_SupportPledgerCasual" />
						<li Class="FS_ArchoDrone.JobGiver_AIGotoPledger" />
					</subNodes>
				</li>

				<!-- Wait if drafted 
				<li Class="ThinkNode_Tagger">
					<tagToGive>DraftedOrder</tagToGive>
					<subNodes>
						<li Class="JobGiver_Orders" />
					</subNodes>
				</li>-->


				<!-- Seek allowed area 
				<li Class="JobGiver_SeekAllowedArea" /> -->
				<!-- Seek safe temperatures
				<li Class="JobGiver_SeekSafeTemperature" /> -->
				<!-- Drop unused inventory 
				<li Class="JobGiver_DropUnusedInventory" /> -->


				<!-- Main behavior core
				<li Class="ThinkNode_PrioritySorter">
					<subNodes>
						<<<AIPawn - satisfy basic needs 
						<li Class="AIRobot.X2_JobGiver_RechargeEnergy" />

						<li Class="AIRobot.X2_JobGiver_Work" />
					</subNodes>
				</li>-->


				<!-- Idle wander for colonists 
				<li Class="AIRobot.X2_JobGiver_Return2BaseRoom" />
				<li Class="AIRobot.X2_JobGiver_RechargeEnergyIdle" />-->
				
				<!--<li Class="ThinkNode_Tagger">
					<tagToGive>Idle</tagToGive>
					<subNodes>
						Wander
						<li Class="JobGiver_WanderColony">
							<maxDanger>None</maxDanger>
						</li>
					</subNodes>
				</li> -->



				<!-- If you're a neutral non-prisoner, if you're not bleeding exit the map, otherwise wander the room 
				<li Class="ThinkNode_ConditionalPrisoner">
					<invert>true</invert>
					<subNodes>
						<li Class="ThinkNode_ConditionalNonPlayerNonHostileFactionOrFactionless">
							<subNodes>
								<li Class="JobGiver_ExitMapBest" >
									<defaultLocomotion>Walk</defaultLocomotion>
								</li>
							</subNodes>
						</li>
					</subNodes>
				</li> -->

				<li Class="JobGiver_Idle">
					<ticks>120</ticks>
				</li>

				<li Class="JobGiver_IdleError"/>

			</subNodes>
		</thinkRoot>
	</ThinkTreeDef>



<!--	<ThinkTreeDef>
		<defName>X2_AIRobotConstant</defName>
		<thinkRoot Class="ThinkNode_Priority">
			<subNodes>
				<li Class="ThinkNode_ConditionalCanDoConstantThinkTreeJobNow">
					<subNodes>

						 Flee explosion 
						<li Class="JobGiver_FleePotentialExplosion" />

						 Hostility response 
						<li Class="JobGiver_ConfigurableHostilityResponse" />

						 Lord directives
						<li Class="ThinkNode_Subtree">
							<treeDef>AIRobot_LordDutyConstant</treeDef>
						</li>
					</subNodes>
				</li>
			</subNodes>
		</thinkRoot>
	</ThinkTreeDef> -->

</Defs>
